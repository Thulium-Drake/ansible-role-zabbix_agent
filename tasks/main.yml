---
- name: 'Install packages'
  package:
    name:
      - 'zabbix-agent'
      - 'zabbix-sender'
      - 'cron'
    state: 'present'

- name: 'Install python dependencies on Ansible controller'
  pip:
    name: 'zabbix-api'
  delegate_to: 'localhost'

- name: 'Ensure agent base config'
  template:
    src: 'zabbix_agentd.conf.j2'
    dest: '/etc/zabbix/zabbix_agentd.conf'
    mode: 0644
    owner: 'root'
    group: 'root'
  notify: 'restart zabbix-agent'

- name: 'Ensure agent key'
  copy:
    content: "{{ (ansible_facts['fqdn'] + zabbix_agent_key_seed | string ) | hash('sha512') }}"
    dest: '/etc/zabbix/zabbix_agentd.key'
    mode: 0600
    owner: 'zabbix'
    group: 'zabbix'
  notify: 'restart zabbix-agent'
  no_log: true

- name: 'Ensure service enabled'
  service:
    name: 'zabbix-agent'
    enabled: true
    state: 'started'

- name: 'Ensure agent configuration directory'
  file:
    path: '/etc/zabbix/zabbix_agentd.d'
    state: 'directory'
    owner: 'root'
    group: 'root'

- name: 'Merge zabbix_templates list'
  merge_vars:
    suffix_to_merge: '_zabbix_templates__to_merge'
    merged_var_name: 'zabbix_templates'
    expected_type: 'list'

- name: 'Deploy extra files for templates'
  block:
    - name: 'Deploy supporting script for templates'
      copy:
        src: "{{ zabbix_template_script_path }}/zabbix-{{ template.filename }}/zabbix_{{ template.filename }}"
        dest: "/usr/local/bin/zabbix_{{ template.filename }}"
        mode: 0775
        owner: 'root'
        group: 'root'
      loop: "{{ zabbix_templates }}"
      loop_control:
        loop_var: 'template'

    - name: 'Deploy agent configuration for templates'
      copy:
        src: "{{ zabbix_template_script_path }}/zabbix-{{ template.filename }}/zabbix_agent-{{ template.filename }}.conf"
        dest: "/etc/zabbix/zabbix_agentd.d/zabbix_agent-{{ template.filename }}.conf"
        mode: 0664
        owner: 'root'
        group: 'root'
      loop: "{{ zabbix_templates }}"
      loop_control:
        loop_var: 'template'
      notify: 'restart zabbix-agent'

    - name: 'Ensure packages for template'
      package:
        name: "{{ template.packages }}"
        state: 'present'
      when: template.packages is defined
      loop: "{{ zabbix_templates }}"
      loop_control:
        loop_var: 'template'

    - name: 'Deploy host agent configuration files for templates'
      copy:
        src: "{{ zabbix_template_config_path }}/zabbix-{{ template.filename }}/{{ ansible_facts['fqdn'] }}.conf"
        dest: "/etc/zabbix/zabbix-{{ template.filename }}.conf"
        mode: 0664
        owner: 'root'
        group: 'root'
      when:
        - template.conf_required
        - template.conf_files is not defined
      loop: "{{ zabbix_templates }}"
      loop_control:
        loop_var: 'template'
      notify: 'restart zabbix-agent'

    - name: 'Deploy host agent configuration files for templates'
      copy:
        src: "{{ zabbix_template_config_path }}/zabbix-{{ template.0.filename }}/{{ ansible_facts['fqdn'] }}-{{ template.1 }}"
        dest: "/etc/zabbix/zabbix-{{ template.filename }}.conf"
        mode: 0664
        owner: 'root'
        group: 'root'
      when:
        - template.conf_required
        - template.conf_files is defined
      loop: "{{ zabbix_templates | subelements('packages') }}"
      loop_control:
        loop_var: 'template'
      notify: 'restart zabbix-agent'

    - name: 'Ensure cronjobs for templates'
      cron:
        name: "{{ template.filename }} getdata"
        job: "/usr/local/bin/zabbix_{{ template.filename }} getdata"
        special_time: "{{ template.cron_special_time | default(omit) }}"
        user: "{{ template.cron_user | default('zabbix') }}"
      when: template.cron_required
      loop: "{{ zabbix_templates }}"
      loop_control:
        loop_var: 'template'
  when: template.filename is defined

- name: 'Ensure host in Zabbix'
  zabbix_host:
    server_url: "{{ zabbix_server_url }}"
    validate_certs: "{{ zabbix_server_validate }}"
    http_login_user: "{{ zabbix_server_username }}"
    http_login_password: "{{ zabbix_server_password }}"
    login_user: "{{ zabbix_server_username }}"
    login_password: "{{ zabbix_server_password }}"
    host_name: "{{ ansible_facts['fqdn'] }}"
    host_groups: "{{ zabbix_host_groups }}"
    tls_connect: 2
    tls_accept: 2
    tls_psk: "{{ (ansible_facts['fqdn'] + zabbix_agent_key_seed | string ) | hash('sha512') }}"
    tls_psk_identity: "{{ ansible_facts['fqdn'] }}"
    interfaces:
      - type: 'agent'
        main: 1
        dns: "{{ ansible_facts['fqdn'] }}"
        ip: "{{ ansible_facts['default_ipv4']['address'] }}"
        useip: 1
    link_templates: "{{ zabbix_templates | json_query('[*].zabbix_name') }}"
    force: "{{ zabbix_server_agent_force }}"
  delegate_to: 'localhost'
